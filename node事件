1,nodejs四种异步编程机制。
回调函数，
事件，
订阅者模式，
promise对象。
2,用回调函数实现异步操作的两种状态是什么？
开始，结束。
3，事件三要素
事件名称
on绑定
事件处理函数
4,通过EventEmitter解决异步多状态响应问题。
5，引用模块+响应事件+触发事件
var EventEmitter = require('event').Eventemitter;
var emitter = new EventEmitter();
emitter.on('hello',function(){
console.log("hahahahaha");
})
setTimeout(function(){}
emitter.on('hello');
,5000).
6,事件继承：使自己的类有事件机制的两种方法分别是什么？
    1. 让自己的类继承 EventEmitter 类（原型继承）
    var event = require('event');
    function dog(name){
      event.Eventemitter.call(this);
      var self = yhis;
      this.name = name;
      var timer = setInterval(function(){
      self.emit('haha')},1000);
      this.stop = function(){
      clearInterval(timer);}
      }
      dog.prototype.__proto__=event.EventEmitter.prototype;
       module.exports = Dog;
    2. 把 EventEmitter 类中的方法复制到自己的类中（又叫混合方式）
7,util 的 inherits 方法的使用格式是怎样的？
  util.inherits(继承者，被继承者);
